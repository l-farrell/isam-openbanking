
# Local Management Interface
#management-url: "https://173.193.85.173:30442"
management-url: "https://isam.local:20442"
admin-username: "admin"
admin-password: "admin"
admin-password-old: "admin"


web-code: 2889-D57C-0FEB-223A-D801-6177-68A9-069A
aac-code: 4444-F462-E174-AA1E-E87B-9F06-E6AC-DA0B
fed-code: 9A08-84CC-599A-5CC2-C4D9-ACD3-AD70-B4D6


ca-cert: "./myCA.pem"
db-cert: "./db.pem"
rt-cert: "./runtime.p12"
rt-cert-passwd: "passw0rd"
rt-cert-label: "runtime"

junction-root-page: "./index.html"

definition:  '{"name": "OpenBanking", "tcmBehavior": "ALWAYS_PROMPT", "enableMultipleRefreshTokensForFaultTolerance": true, "description": "An API protection definition configured for OpenBanking", "oidc": { "poc": "https://isam.local:20443/isam", "iss": "https://isam.local:20443", "lifetime": 20, "cert": "runtime", "enc": { "enc": null, "alg": null, "enabled": false }, "alg": "RS256", "enabled": true, "db": "rt_profile_keys", "dynamicClients":true, "issueSecret":true }, "refreshTokenLength": 40, "grantTypes": [ "RESOURCE_OWNER_PASSWORD_CREDENTIALS", "JWT_BEARER", "IMPLICIT_GRANT", "CLIENT_CREDENTIALS", "AUTHORIZATION_CODE" ],  "issueRefreshToken":true }'
client: '{ "redirectUri": ["https://static.com", "https://staticclient.com/auth", "https://staticclient.com/auth", "https://localhost:19880/auth"] , "otherInfo": null, "clientId": "static_client", "companyName": "LMFwallet", "contactPerson": "lmf", "jwksUri": null, "contactType": "TECHNICAL", "encryptionCert": null, "companyUrl": "https://lmfwallet.com", "encryptionDb": null, "phone": null, "name": "A oauth client", "requirePkce": false, "definition": "1", "clientSecret": "hunter2", "id": "1", "email": "lfarrell@au1.ibm.com" }' 

jwt-issue-chain-template: '[{"id":"default-stsuu", "mode":"validate", "prefix": "a"},  {"id":"default-jwt", "mode":"issue", "prefix": "b"}]'
jwt-issue-properties: '[]'


jwt-validate-chain-template: '[{"id":"default-jwt", "mode":"validate", "prefix": "0"},  {"id":"default-stsuu", "mode":"issue", "prefix": "1"}]'
jwt-validate-properties: '[{"name":"0.encryption.alg","value":[""]},{"name":"0.encryption.enc","value":[""]},{"name":"0.encryption.symmetricKey","value":[""]},{"name":"0.encryption.db","value":[""]},{"name":"0.encryption.cert","value":[""]},{"name":"0.signing.alg","value":[""]},{"name":"0.signing.symmetricKey","value":[""]},{"name":"0.signing.db","value":[""]},{"name":"0.signing.cert","value":[""]},{"name":"0.signing.jwksUri","value":["https://localhost/sps/jwks"]},{"name":"0.iss","value":[""]},{"name":"0.aud","value":[""]},{"name":"0.sub","value":[""]},{"name":"0.validateExp","value":["false"]},{"name":"0.validateNbf","value":["false"]},{"name":"0.validateSkew","value":["0"]}]'
jwt-ssa-properties: '[{"name":"0.encryption.alg","value":[""]},{"name":"0.encryption.enc","value":[""]},{"name":"0.encryption.symmetricKey","value":[""]},{"name":"0.encryption.db","value":[""]},{"name":"0.encryption.cert","value":[""]},{"name":"0.signing.alg","value":[""]},{"name":"0.signing.symmetricKey","value":[""]},{"name":"0.signing.db","value":[""]},{"name":"0.signing.cert","value":[""]},{"name":"0.signing.jwksUri","value":["https://localhost/sps/jwks"]},{"name":"0.iss","value":[""]},{"name":"0.aud","value":[""]},{"name":"0.sub","value":[""]},{"name":"0.validateExp","value":["false"]},{"name":"0.validateNbf","value":["false"]},{"name":"0.validateSkew","value":["0"]}]'

ssa-infomap: '<?xml version="1.0"?> <Policy xmlns="urn:ibm:security:authentication:policy:1.0:schema" PolicyId="urn:ibm:security:authentication:asf:ssa"> <Description>test</Description> <Step id="id15764691979550" type="Authenticator"> <Authenticator id="id15764691979551" AuthenticatorId="urn:ibm:security:authentication:asf:mechanism:ssa"/> </Step> </Policy>'
fido-policy: "<Policy xmlns=\"urn:ibm:security:authentication:policy:1.0:schema\" PolicyId=\"urn:ibm:security:authentication:asf:fido2\"><Description>Fido2</Description><Step id=\"id15765845693280\" type=\"Authenticator\"><Authenticator id=\"id15765845693281\" AuthenticatorId=\"urn:ibm:security:authentication:asf:mechanism:fido2\"><Parameters><AttributeAssignment AttributeId=\"relyingPartyConfigId\"><AttributeValue DataType=\"FIDO2RelyingParty\">{}</AttributeValue></AttributeAssignment></Parameters></Authenticator></Step></Policy>"

fido-rp-id: isam.local

fido-origins: '["https://isam.local:20443"]'

trace-spec: 'com.tivoli.am.fim.oauth21.*=ALL:com.tivoli.am.fim.trustserver.sts.modules.*=ALL:com.tivoli.am.fim.trustserver.sts.utilities.*=ALL'

scim-config: '{"urn:ietf:params:scim:schemas:core:2.0:User":{"ldap_connection":"ISAM","connection_type":"isamruntime","search_suffix":"secAuthority=Default","user_suffix":"secAuthority=Default","user_dn":"","attrs_dir":"","ldap_object_classes":[{"name":"top"},{"name":"person"},{"name":"organizationalPerson"},{"name":"inetOrgPerson"}],"mappings":[{"scim_attribute":"userName","mapping":{"type":"ldap","source":"cn"}},{"scim_attribute":"name","mapping":[{"scim_subattribute":"familyName","type":"ldap","source":"sn"},{"scim_subattribute":"givenName","type":"ldap","source":"givenName"}]},{"scim_attribute":"displayName","mapping":{"type":"ldap","source":"displayName"}},{"scim_attribute":"title","mapping":{"type":"ldap","source":"title"}},{"scim_attribute":"preferredLanguage","mapping":{"type":"ldap","source":"preferredLanguage"}},{"scim_attribute":"password","mapping":{"type":"ldap","source":"userPassword"}},{"scim_attribute":"emails","mapping":[{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"work"},{"name":"primary","type":"fixed","source":"true"},{"name":"value","type":"ldap","source":"mail"}]}]},{"scim_attribute":"phoneNumbers","mapping":[{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"home"},{"name":"primary","type":"fixed","source":"false"},{"name":"value","type":"ldap","source":"homePhone"}]},{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"mobile"},{"name":"primary","type":"fixed","source":"false"},{"name":"value","type":"ldap","source":"mobile"}]},{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"pager"},{"name":"primary","type":"fixed","source":"false"},{"name":"value","type":"ldap","source":"pager"}]},{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"work"},{"name":"primary","type":"fixed","source":"true"},{"name":"value","type":"ldap","source":"telephoneNumber"}]}]},{"scim_attribute":"addresses","mapping":[{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"home"},{"name":"formatted","type":"ldap","source":"homePostalAddress"}]},{"extended_scim_attributes":[{"name":"type","type":"fixed","source":"work"},{"name":"formatted","type":"ldap","source":"postalAddress"},{"name":"streetAddress","type":"ldap","source":"street"},{"name":"postalCode","type":"ldap","source":"postalCode"},{"name":"locality","type":"ldap","source":"l"},{"name":"region","type":"ldap","source":"st"}]}]}],"enforce_password_policy":false},"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User":{"mappings":[{"scim_attribute":"employeeNumber","mapping":{"type":"ldap","source":"employeeNumber"}},{"scim_attribute":"organization","mapping":{"type":"ldap","source":"o"}},{"scim_attribute":"department","mapping":{"type":"ldap","source":"departmentNumber"}},{"scim_attribute":"manager","mapping":[{"scim_subattribute":"value","type":"ldap","source":"manager"}]}]}}'
ldap-server: 'openldap'
db-server: 'postgresql'
rt-server: 'isamruntime'


#"<?xml version=\"1.0\" encoding='UTF-8'?>\n\n<!--\n  This XSLT file is used to control the mapping of a client certificate to\n  a TAM user identity.\n\n  The input into the rule evaluation will be an XML representation of the\n  client certificate, i.e.\n    <?xml version=\"1.0\" encoding='UTF-8'?>\n\n    <XMLUMI>\n      <stsuuser:STSUniversalUser xmlns:stsuuser=\"urn:ibm:names:ITFIM:1.0:stsuuser\">\n        <stsuuser:Principal>\n          <stsuuser:Attribute name=\"name\">    \n            <stsuuser:Value>\n              - Subject DN from certificate -\n            </stsuuser:Value>\n          </stsuuser:Attribute>\n        </stsuuser:Principal>\n        <stsuuser:AttributeList>\n          <stsuuser:Attribute name=\"-attr-name-\" type=\"urn:ibm:security:gskit\">\n            <stsuuser:Value>-attrvalue-</stsuuser:Value>\n          </stsuuser:Attribute>\n          ...\n        </stsuuser:AttributeList>\n      </stsuuser:STSUniversalUser>\n    </XMLUMI>\n\n   Only those attributes which are referenced in the xsl file will be included in the generated XML document.\n   The '-attr-name-' for WebSEAL can be one of the following:\n      * Base64Certificate\n      * DerCertificate\n      * SerialNumber\n      * SubjectCN\n      * SubjectLocality\n      * SubjectState\n      * SubjectCountry\n      * SubjectOrganization\n      * SubjectOrganizationalUnit\n      * SubjectDN\n      * SubjectPostalCode\n      * SubjectEmail\n      * SubjectUniqueID\n      * IssuerCN\n      * IssuerLocality\n      * IssuerState\n      * IssuerCountry\n      * IssuerOrganization\n      * IssuerOrganizationUnit\n      * IssuerDN\n      * IssuerPostalCode\n      * IssuerEmail\n      * IssuerUniqueID\n      * Version\n      * SignatureAlgorithm\n      * ValidFrom\n      * ValidFromEx\n      * ValidTo\n      * ValidToEx\n      * PublicKeyAlgorithm\n      * PublicKey\n      * PublicKeySize\n      * FingerprintAlgorithm\n      * Fingerprint\n      * BasicConstraintsCA\n      * BasicConstraintsPathLength\n      * CertificatePolicyID\n      * CRLDistributionPoints\n      * DerSubjectDN\n      * DerIssuerDN\n      * KeyUsage\n      * AlternativeDirectoryName\n      * AlternativeDNSName\n      * AlternativeIPAddress\n      * AlternativeURI\n      * AlternativeEmail\n\n   A subset of these GSKit attributes are made available by the Plug-in\n   for Web Servers, namely:\n       * SubjectDN\n       * IssuerDN\n       * SerialNumber\n\n   The output from the rule will be a string which conforms to one of the\n   following definitions:\n      - Free form text, surrounded by '!', which could also include elements \n        from the source XML.  This string will be used as the user DN.  \n\tExamples include:\n            !cn=testuser,o=ibm,c=au!\n            !<xsl:value-of select=\"stsuuser:Attribute[@name='SubjectDN']/stsuuser:Value\"/>!\n\n      - An attribute value from the user registry, obtained from a search.  This\n        will have the format of:\n\t    !userreg base='%base%' attr='%name%'!%ldap-search-filter%!\n\tAn example could be:\n              !userreg base='o=ibm,c=au' attr='cn'! (&amp;(objectClass=ePerson)(serialNum=<xsl:value-of select=\"stsuuser:Attribute[@name='SerialNumber']/stsuuser:Value\"/>))!\n\n       - No matching rule was found, which will cause the CDAS to return with\n         an error.  The format for this string is:\n              !no-matching-rule!\n\n-->\n\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:stsuuser=\"urn:ibm:names:ITFIM:1.0:stsuuser\" version=\"1.0\">\n\n    <!-- Required to constrain output of rule evaluation -->\n    <xsl:output method=\"text\" omit-xml-declaration=\"yes\" encoding='UTF=8' indent=\"no\"/>\n\n    <!-- Need this to ensure default text node printing is off -->\n    <xsl:template match=\"text()\"></xsl:template>\n\n    <!-- Let's make it easier by matching the constant part of our XML name -->\n    <xsl:template match=\"/XMLUMI/stsuuser:STSUniversalUser/stsuuser:AttributeList\">\n        !<xsl:value-of select=\"stsuuser:Attribute[@name='SubjectDN']/stsuuser:Value\"/>!\n    </xsl:template>\n\n</xsl:stylesheet>\n\n"
#cert-mapping: "<?xml version=\"1.0\" encoding='UTF-8'?> <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:stsuuser=\"urn:ibm:names:ITFIM:1.0:stsuuser\" version=\"1.0\"> <xsl:output method=\"text\" omit-xml-declaration=\"yes\" encoding='UTF=8' indent=\"no\"/> <xsl:template match=\"text()\"></xsl:template> <xsl:template match=\"/XMLUMI/stsuuser:STSUniversalUser/stsuuser:AttributeList\"> <xsl:variable name=\"varSubjectDN\"> <xsl:value-of select=\"stsuuser:Attribute[@name='SubjectDN']/stsuuser:Value\"/> </xsl:variable> <xsl:variable name=\"BACK\"> <xsl:value-of select=\"substring-before($varSubjectDN, ',')\"/> </xsl:variable> <xsl:variable name=\"FRONT\"> <xsl:value-of select=\"substring-after($BACK, '=')\"/> </xsl:variable> <xsl:choose> <xsl:when test=\"contains($FRONT, 'CN=')\"> !<xsl:value-of select=\"concat($FRONT, '')\"/>!  </xsl:when> <xsl:otherwise> !<xsl:value-of select=\"concat($FRONT, '')\"/>!  </xsl:otherwise> </xsl:choose> </xsl:template> </xsl:stylesheet>\""